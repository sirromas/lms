{
  "_args": [
    [
      {
        "raw": "iconv-lite@https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.2.11.tgz",
        "scope": null,
        "escapedName": "iconv-lite",
        "name": "iconv-lite",
        "rawSpec": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.2.11.tgz",
        "spec": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.2.11.tgz",
        "type": "remote"
      },
      "/Users/moyo/Documents/lms"
    ]
  ],
  "_from": "iconv-lite@>=0.2.11 <0.3.0",
  "_id": "iconv-lite@0.2.11",
  "_inCache": true,
  "_location": "/iconv-lite",
  "_phantomChildren": {},
  "_requested": {
    "raw": "iconv-lite@https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.2.11.tgz",
    "scope": null,
    "escapedName": "iconv-lite",
    "name": "iconv-lite",
    "rawSpec": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.2.11.tgz",
    "spec": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.2.11.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/grunt"
  ],
  "_resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.2.11.tgz",
  "_shasum": "1ce60a3a57864a292d1321ff4609ca4bb965adc8",
  "_shrinkwrap": null,
  "_spec": "iconv-lite@https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.2.11.tgz",
  "_where": "/Users/moyo/Documents/lms",
  "author": {
    "name": "Alexander Shtuchkin",
    "email": "ashtuchkin@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/ashtuchkin/iconv-lite/issues"
  },
  "contributors": [
    {
      "name": "Jinwu Zhan",
      "url": "https://github.com/jenkinv"
    },
    {
      "name": "Adamansky Anton",
      "url": "https://github.com/adamansky"
    },
    {
      "name": "George Stagas",
      "url": "https://github.com/stagas"
    },
    {
      "name": "Mike D Pilsbury",
      "url": "https://github.com/pekim"
    },
    {
      "name": "Niggler",
      "url": "https://github.com/Niggler"
    },
    {
      "name": "wychi",
      "url": "https://github.com/wychi"
    },
    {
      "name": "David Kuo",
      "url": "https://github.com/david50407"
    },
    {
      "name": "ChangZhuo Chen",
      "url": "https://github.com/czchen"
    },
    {
      "name": "Lee Treveil",
      "url": "https://github.com/leetreveil"
    },
    {
      "name": "Brian White",
      "url": "https://github.com/mscdex"
    }
  ],
  "dependencies": {},
  "description": "Convert character encodings in pure javascript.",
  "devDependencies": {
    "iconv": ">=1.1",
    "vows": ""
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "homepage": "https://github.com/ashtuchkin/iconv-lite",
  "keywords": [
    "iconv",
    "convert",
    "charset"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "iconv-lite",
  "optionalDependencies": {},
  "readme": "iconv-lite - pure javascript character encoding conversion\n======================================================================\n\n[![Build Status](https://secure.travis-ci.org/ashtuchkin/iconv-lite.png?branch=master)](http://travis-ci.org/ashtuchkin/iconv-lite)\n\n## Features\n\n*   Pure javascript. Doesn't need native code compilation.\n*   Easy API.\n*   Works on Windows and in sandboxed environments like [Cloud9](http://c9.io).\n*   Encoding is much faster than node-iconv (see below for performance comparison).\n\n## Usage\n\n    var iconv = require('iconv-lite');\n    \n    // Convert from an encoded buffer to string.\n    str = iconv.decode(buf, 'win1251');\n    \n    // Convert from string to an encoded buffer.\n    buf = iconv.encode(\"Sample input string\", 'win1251');\n\n    // Check if encoding is supported\n    iconv.encodingExists(\"us-ascii\")\n\n\n## Supported encodings\n\n*   All node.js native encodings: 'utf8', 'ucs2', 'ascii', 'binary', 'base64'\n*   All widespread single byte encodings: Windows 125x family, ISO-8859 family, \n    IBM/DOS codepages, Macintosh family, KOI8 family. \n    Aliases like 'latin1', 'us-ascii' also supported.\n*   Multibyte encodings: 'gbk', 'gb2313', 'Big5', 'cp950'.\n\nOthers are easy to add, see the source. Please, participate.\nMost encodings are generated from node-iconv. Thank you Ben Noordhuis and iconv authors!\n\nNot supported yet: EUC family, Shift_JIS.\n\n\n## Encoding/decoding speed\n\nComparison with node-iconv module (1000x256kb, on Ubuntu 12.04, Core i5/2.5 GHz, Node v0.8.7). \nNote: your results may vary, so please always check on your hardware.\n\n    operation             iconv@1.2.4   iconv-lite@0.2.4 \n    ----------------------------------------------------------\n    encode('win1251')     ~115 Mb/s     ~230 Mb/s\n    decode('win1251')     ~95 Mb/s      ~130 Mb/s\n\n\n## Notes\n\nWhen decoding, a 'binary'-encoded string can be used as a source buffer.  \nUntranslatable characters are set to ï¿½ or ?. No transliteration is currently supported, pull requests are welcome.\n\n## Testing\n\n    git clone git@github.com:ashtuchkin/iconv-lite.git\n    cd iconv-lite\n    npm install\n    npm test\n    \n    # To view performance:\n    node test/performance.js\n\n## TODO\n\n*   Support streaming character conversion, something like util.pipe(req, iconv.fromEncodingStream('latin1')).\n*   Add more encodings.\n*   Add transliteration (best fit char).\n*   Add tests and correct support of variable-byte encodings (currently work is delegated to node).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/ashtuchkin/iconv-lite.git"
  },
  "scripts": {
    "test": "vows --spec"
  },
  "version": "0.2.11"
}
